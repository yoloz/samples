######################################
# org.apache.log4j.ConsoleAppender（控制台）
# org.apache.log4j.FileAppender（文件）
# org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
# org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
# org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
######################################
# org.apache.log4j.HTMLLayout（以HTML表格形式布局）
# org.apache.log4j.PatternLayout（可以灵活地指定布局模式)
# org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
# org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
######################################
# %m 输出代码中指定的消息
# %p 输出优先级,即DEBUG,INFO,WARN,ERROR,FATAL
# %r 输出自应用启动到输出该log信息耗费的毫秒数
# %c 输出所属的类目,通常就是所在类的全名
# %t 输出产生该日志事件的线程名
# %n 输出一个回车换行符,Windows平台为“rn”,Unix平台为“n”
# %d 输出日志时间点的日期或时间,默认格式为ISO8601,也可以在其后指定格式,比如：%d{yyy MMM dd HH：mm：ss,SSS}
######################################
log4j.rootLogger=info,stdout,gaAppender

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n

log4j.appender.gaAppender=org.apache.log4j.RollingFileAppender
log4j.appender.gaAppender.File=${ga.base.dir}/logs/gather.log
log4j.appender.gaAppender.Encoding=UTF-8
log4j.appender.gaAppender.MaxFileSize=10MB
log4j.appender.gaAppender.Append=true
log4j.appender.gaAppender.MaxBackupIndex=10
log4j.appender.gaAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.gaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
#log4j.appender.gaAppender.layout.ConversionPattern=%d %p [%t] (%F:%L) -%m%n

# Change the two lines below to adjust kafka broker logging
log4j.logger.kafka=WARN
log4j.logger.org.apache.kafka=WARN